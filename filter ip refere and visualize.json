{"paragraphs":[{"text":" import org.apache.spark.sql.expressions.Window\nimport org.apache.spark.sql.functions._\nimport spark.implicits._\nimport java.io._\nimport java.sql.Timestamp\ncase class LogRecord( clientIp: String, clientIdentity: String, user: String, dateTime: String, request:String,statusCode:Int, bytesSent:Long, referer:String, userAgent:String )\ncase class Log(clientIp: String, dateTime: String, reqest:String, referer: String)\ncase class AccessLog(clientIp: String, refere:String, time : String)\n\nval PATTERN = \"\"\"^(\\S+) (\\S+) (\\S+) \\[([\\w:/]+\\s[+\\-]\\d{4})\\] \"(\\S+) (\\S+) (\\S+)\" (\\d{3}) (\\S+) \"(\\S+)\" \"([^\"]*)\"\"\"\".r\ndef parseLogLine(log: String): LogRecord = {\n      try {\n        val res = PATTERN.findFirstMatchIn(log)\n        val regex=\".*\\\\.css\"\n \n        if (res.isEmpty) {\n          //println(\"Rejected Log Line: \" + log)\n          LogRecord(\"Empty\", \"-\", \"-\", \"\", \"\",  -1, -1, \"-\", \"-\" )\n        }\n        else {\n          val m = res.get\n          // NOTE:   HEAD does not have a content size.\n          if(!m.group(10).matches(regex))\n            {  if (m.group(9).equals(\"-\")) {\n                LogRecord(m.group(1), m.group(2), m.group(3), m.group(4),\n                  m.group(6), m.group(8).toInt, 0, m.group(10), m.group(11))\n              }\n              else {\n                LogRecord(m.group(1), m.group(2), m.group(3), m.group(4),\n                  m.group(6), m.group(8).toInt, m.group(9).toLong, m.group(10), m.group(11))\n              }\n            }\n            else\n            {\n                LogRecord(\"Empty\", \"-\", \"-\", \"\", \"-\", -1, -1, \"-\", \"-\" )\n            }\n        }\n      } catch\n      {\n        case e: Exception =>\n          //println(\"Exception on line:\" + log + \":\" + e.getMessage);\n          LogRecord(\"Empty\", \"-\", \"-\", \"\", \"-\", -1, -1, \"-\", \"-\" )\n      }\n    }\n\n\n    def write(path: String, txt: String): Unit = {\n        import java.nio.file.{Paths, Files}\n        import java.nio.charset.StandardCharsets\n    \n        Files.write(Paths.get(path), txt.getBytes(StandardCharsets.UTF_8))\n    }\n    val logFile =  sc.textFile(\"/home/ntm/Desktop/access_log/hcmut_access_2017.txt\")\n\n    val accesslog = logFile.map(parseLogLine).filter(!_.clientIp.equals(\"Empty\"))\n    \n    val log_full = accesslog.map(x => Log(x.asInstanceOf[LogRecord].clientIp, x.asInstanceOf[LogRecord].dateTime.slice(0,20), x.asInstanceOf[LogRecord].request, x.asInstanceOf[LogRecord].referer))\n    \n    val log_with_timestamp = log_full.toDF().withColumn(\"timestamp\", unix_timestamp($\"dateTime\",\"dd/MMM/yyyy:HH:mm:ss\").cast(\"timestamp\")).drop(\"dateTime\").orderBy($\"clientIp\").persist\n    \n        \n    //var count = 0\n    \n    val List_ip_filter = log_with_timestamp.select(\"clientIp\").collect().toList.distinct.map(x=> x.get(0)).map(x =>  log_with_timestamp.filter(y => y.getString(0).equals(x)))\n\n    val duration = List_ip_filter.map(x => {  \n       // count =  count + 1; \n        val names = Window.partitionBy('clientIp).orderBy('timestamp); \n        val withPreviousDateTime =  x.withColumn(\"previousTime\", lag('timestamp, 1) over names).withColumn(\"duration\",unix_timestamp('timestamp) - unix_timestamp('previousTime)) ; \n        //withPreviousDateTime.registerTempTable(\"data_full_\" + count.toString);\n        withPreviousDateTime;\n    })\n     \n    var res =\"\";\n    var countip = 0;\n    var count_line =0;\n   val file = \"/home/ntm/Desktop/ip_filter.txt\"\n   val writer = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(file)))\n   duration.map(x => {\n              var hit = 1\n              countip = countip + 1;\n              val client_ip = x.map(y => y(0).asInstanceOf[String]).collect.head.toString\n             val array_refer = x.map(y => y(2).asInstanceOf[String]).collect\n              val array_duration = x.map(y => y(5).asInstanceOf[Long]).collect\n              var time = x.map(y => y(3).asInstanceOf[Timestamp]).collect\n              var name = client_ip.toString +\",\"+ array_refer(0) + \",\" +time(0)\n              res =  name + \"\\n\"\n               writer.write(res)\n              count_line = count_line + array_refer.length\n              if (array_refer.length != 1){\n                  for (i<-1 to array_refer.length - 1){\n                     if(array_refer(i) != array_refer(i-1)) { \n                          hit = hit + 1\n                          name = client_ip.toString +\",\"+  array_refer(i) +\",\"+ time(i)\n                          res = name +\"\\n\"\n                          writer.write(res)\n      \n                     }\n                      else{\n                          if(array_duration(i) > 3){\n                              hit = hit + 1\n                              name = client_ip.toString + \",\"+  array_refer(i) + \",\"+ time(i)\n                              res = name +\"\\n\"\n                              writer.write(res)\n                          }\n                      }\n                  }\n                 \n             }\n              //println(res)\n              println(\"So Ip la : \" + countip)\n              println(\"So line la : \" + count_line)\n               //println(\"Access times:  \" +hit.toString )\n           })\n\n     writer.close()\n       // write(\"/home/ntm/Desktop/testID.txt\", res)\n       \n\n     \n     \n\n","user":"anonymous","dateUpdated":"2018-04-18T09:21:31+0700","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1521078667085_1167751018","id":"20180315-085107_1059668078","dateCreated":"2018-03-15T08:51:07+0700","dateStarted":"2018-04-12T10:43:35+0700","dateFinished":"2018-04-12T10:44:17+0700","status":"ERROR","errorMessage":"","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:261"},{"text":"","user":"anonymous","dateUpdated":"2018-04-15T15:11:44+0700","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1521081207999_1689473218","id":"20180315-093327_1573799642","dateCreated":"2018-03-15T09:33:27+0700","dateStarted":"2018-03-27T09:56:24+0700","dateFinished":"2018-03-27T09:56:28+0700","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:262"},{"text":"case class AccessLog(clientIp: String, refere:String, time : String)\nval raw =  sc.textFile(\"/home/ntm/Desktop/ip_access_times.txt\").persist\nval rawwclass  = raw.map(x => x.split(\",\")).map(s => AccessLog(s(0).toString,s(1).toString,s(2).toString))\nrawwclass.toDF().registerTempTable(\"rawclass\")","user":"anonymous","dateUpdated":"2018-04-18T08:48:01+0700","config":{"colWidth":12,"enabled":true,"results":{"0":{"graph":{"mode":"multiBarChart","height":304,"optionOpen":false},"helium":{}}},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"defined class AccessLog\nraw: org.apache.spark.rdd.RDD[String] = /home/ntm/Desktop/ip_access_times.txt MapPartitionsRDD[1] at textFile at <console>:27\nrawwclass: org.apache.spark.rdd.RDD[AccessLog] = MapPartitionsRDD[3] at map at <console>:31\nwarning: there was one deprecation warning; re-run with -deprecation for details\n"}]},"apps":[],"jobName":"paragraph_1521083970206_-853377712","id":"20180315-101930_931158349","dateCreated":"2018-03-15T10:19:30+0700","dateStarted":"2018-04-18T08:48:03+0700","dateFinished":"2018-04-18T08:50:22+0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:263"},{"text":"%sql\nSELECT clientIp, refere  from  rawclass limit 50","user":"anonymous","dateUpdated":"2018-04-18T08:51:09+0700","config":{"colWidth":12,"enabled":true,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":true,"setting":{"multiBarChart":{"stacked":false}},"commonSetting":{},"keys":[{"name":"clientIp","index":0,"aggr":"sum"}],"groups":[{"name":"refere","index":1,"aggr":"sum"}],"values":[{"name":"refere","index":1,"aggr":"count"}]},"helium":{}}},"editorSetting":{"language":"sql","editOnDblClick":false},"editorMode":"ace/mode/sql"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"clientIp\trefere\n1.102.0.67\thttp://m.facebook.com/\n1.102.0.67\t-\n1.102.0.67\thttp://www.hcmut.edu.vn/\n1.102.0.67\thttp://www.hcmut.edu.vn/vi\n1.102.0.67\t-\n1.102.0.67\thttp://www.hcmut.edu.vn/vi\n1.102.0.67\t-\n1.102.0.67\t-\n1.102.0.67\thttp://www.hcmut.edu.vn/\n1.46.198.53\thttps://www.google.co.th/\n1.46.198.53\thttp://www.hcmut.edu.vn/en\n1.46.198.53\thttp://www.hcmut.edu.vn/en/welcome/view/menu-intro/introduction/overview/message-from-the-rector\n1.46.198.53\thttp://www.hcmut.edu.vn/en/welcome/view/menu-intro/introduction/overview/message-from-the-rector\n1.46.198.53\thttp://www.hcmut.edu.vn/en/welcome/view/menu-intro/introduction/overview/staff\n1.46.198.53\thttp://www.hcmut.edu.vn/en/welcome/view/menu-intro/introduction/overview/staff\n1.46.198.53\thttp://www.hcmut.edu.vn/en/welcome/view/departments--offices/faculties--training-centers/mechanical-engineering\n1.46.198.53\thttp://www.hcmut.edu.vn/en/welcome/view/menu-intro/introduction/overview/staff\n1.46.198.53\thttp://www.hcmut.edu.vn/en/welcome/view/menu-intro/introduction/overview/message-from-the-rector\n1.46.198.53\thttp://www.hcmut.edu.vn/en/welcome/view/menu-intro/introduction/overview/about-the-university---\n1.46.198.53\thttp://www.hcmut.edu.vn/en/welcome/view/menu-intro/introduction/overview/about-the-university---\n1.46.198.53\thttp://www.hcmut.edu.vn/en/welcome/view/departments--offices/faculties--training-centers/transportation-engineering\n1.52.100.104\thttp://www.hcmut.edu.vn/vi\n1.52.100.104\thttp://www.hcmut.edu.vn/vi\n1.52.100.104\thttp://www.hcmut.edu.vn/vi\n1.52.107.182\thttps://www.google.com.vn/\n1.52.107.182\thttp://www.hcmut.edu.vn/\n1.52.107.182\thttp://www.hcmut.edu.vn/vi\n1.52.107.182\thttps://www.google.com.vn/\n1.52.107.182\thttp://www.hcmut.edu.vn/\n1.52.107.182\thttp://www.hcmut.edu.vn/vi\n1.52.107.182\thttps://www.google.com.vn/\n1.52.107.182\thttp://www.hcmut.edu.vn/en/\n1.52.107.182\thttp://www.hcmut.edu.vn/en/\n1.52.110.202\thttps://www.google.com.vn/\n1.52.110.202\thttp://www.hcmut.edu.vn/vi/event/view/hoc-bong--tuyen-dung/2517-cong-ty-avery-dennison-tuyen-dung-nhan-su\n1.52.110.202\thttp://www.hcmut.edu.vn/vi/event/view/hoc-bong--tuyen-dung/2517-cong-ty-avery-dennison-tuyen-dung-nhan-su\n1.52.120.141\thttps://www.google.com.vn/\n1.52.120.62\thttps://www.google.com.vn/\n1.52.123.208\thttps://www.google.com.vn/\n1.52.123.208\thttp://www.hcmut.edu.vn/upload/ctctsv1/images/2015/11-2015/keo%20co.jpg\n1.52.123.57\thttps://www.google.com.vn/\n1.52.123.57\thttp://www.hcmut.edu.vn/vi/event/view/hoc-bong--tuyen-dung/2597-tin-tuyen-dung--cong-ty-tnhh-mtv-duoc-pham-trung-uong-2-codupha-\n1.52.123.57\thttp://www.hcmut.edu.vn/vi/event/view/hoc-bong--tuyen-dung/2597-tin-tuyen-dung--cong-ty-tnhh-mtv-duoc-pham-trung-uong-2-codupha-\n1.52.131.84\thttp://www.google.com.vn/search?q=h%C6%B0%E1%BB%9Bng+d%E1%BA%ABn+thi+anh+v%C4%83n+%C4%91%E1%BA%A7u+v%C3%A0o+cho+t%C3%A2n+sinh+vi%C3%AAn+kh%C3%B3a+16&btnG=&oq=%C4%91%E1%BB%81+thi+ti%E1%BA%BFng+anh+%C4%91%E1%BA%A7u+v%C3%A0o&gs_l=mobile-heirloom-serp.1.0.0l5.125.24470.0.26985.39.31.1.7.7.1.1513.10019.0j8j14j5j2j7-1j1.31.0....0...1c.1.34.mobile-heirloom-serp..9.30.7356.xUz_u7ZeXE8\n1.52.131.84\thttp://www.google.com.vn/search?q=h%C6%B0%E1%BB%9Bng+d%E1%BA%ABn+thi+anh+v%C4%83n+%C4%91%E1%BA%A7u+v%C3%A0o+cho+t%C3%A2n+sinh+vi%C3%AAn+kh%C3%B3a+16&btnG=&oq=%C4%91%E1%BB%81+thi+ti%E1%BA%BFng+anh+%C4%91%E1%BA%A7u+v%C3%A0o&gs_l=mobile-heirloom-serp.1.0.0l5.125.24470.0.26985.39.31.1.7.7.1.1513.10019.0j8j14j5j2j7-1j1.31.0....0...1c.1.34.mobile-heirloom-serp..9.30.7356.xUz_u7ZeXE8\n1.52.133.27\thttps://www.google.com.vn/\n1.52.133.27\thttp://www.hcmut.edu.vn/vi/event/view/thong-bao/2242-in-giay-chung-nhan-sinh-vien-de-tam-hoan-nghia-vu-quan-su\n1.52.133.27\thttp://www.hcmut.edu.vn/vi/event/view/thong-bao/2242-in-giay-chung-nhan-sinh-vien-de-tam-hoan-nghia-vu-quan-su\n1.52.140.34\thttps://www.google.com.vn/\n1.52.140.34\thttp://www.hcmut.edu.vn/en/\n"}]},"apps":[],"jobName":"paragraph_1521167285686_471869895","id":"20180316-092805_770667418","dateCreated":"2018-03-16T09:28:05+0700","dateStarted":"2018-04-18T08:50:59+0700","dateFinished":"2018-04-18T08:51:17+0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:264"},{"text":"%sql\n","user":"anonymous","dateUpdated":"2018-03-16T10:39:43+0700","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"sql"},"editorMode":"ace/mode/sql"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1521171583406_1122591891","id":"20180316-103943_1240033831","dateCreated":"2018-03-16T10:39:43+0700","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:265"}],"name":"filter ip refere and visualize","id":"2D8ZC7XWP","angularObjects":{"2D9G31WW7:shared_process":[],"2D7F5WZ3Y:shared_process":[],"2D7GMNNGQ:shared_process":[],"2D7GSW1AW:shared_process":[],"2D9C611XK:shared_process":[],"2D8XS5NZK:shared_process":[],"2DAC6TT6G:shared_process":[],"2D93XZNV7:shared_process":[],"2D84T2E7F:shared_process":[],"2DAAN1PZW:shared_process":[],"2D93ZAZ99:shared_process":[],"2DA3RJ3HV:shared_process":[],"2D8F1CDRV:shared_process":[],"2D7N6J63A:shared_process":[],"2D7343SYH:shared_process":[],"2D9XB5X1M:shared_process":[],"2DAEXMG5R:shared_process":[],"2D9ST5PKZ:shared_process":[],"2D71VY8MX:shared_process":[],"2D9MPEZKV:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}